# CPU-only version that works on all platforms including Apple Silicon
FROM python:3.12-slim

# Create app user
RUN useradd -m -u 1000 appuser

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install uv for the app user
USER appuser
RUN curl -LsSf https://astral.sh/uv/install.sh | sh

# Set PATH to include uv
ENV PATH="/home/appuser/.cargo/bin:${PATH}"

# Copy project files and set ownership
USER root
COPY --chown=appuser:appuser pyproject.toml .

# Create necessary directories
RUN mkdir -p data results fonts examples && chown -R appuser:appuser data results fonts examples

# Copy application code
COPY --chown=appuser:appuser main.py .
COPY --chown=appuser:appuser storydiffusion ./storydiffusion
COPY --chown=appuser:appuser utils ./utils
COPY --chown=appuser:appuser fonts ./fonts
COPY --chown=appuser:appuser examples ./examples

# Override device detection to use CPU
RUN sed -i 's/DEVICE = .*/DEVICE = "cpu"/' storydiffusion/config.py

# Switch to app user
USER appuser

# Install dependencies
RUN uv venv && \
    . .venv/bin/activate && \
    uv pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu && \
    uv sync

# Download PhotoMaker model during build (optional)
# RUN uv run python -c "from storydiffusion.models.pipeline import download_photomaker_model; download_photomaker_model()"

# Expose the port
EXPOSE 7860

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV GRADIO_SERVER_NAME=0.0.0.0
ENV GRADIO_SERVER_PORT=7860
ENV GRADIO_TEMP_DIR=/tmp/gradio_cache

# Run the application
CMD ["uv", "run", "main.py"]